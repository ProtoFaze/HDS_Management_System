/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package javaassignment.views;

import java.awt.Color;
import java.text.DecimalFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javaassignment.models.Booking;
import javaassignment.verify;
import javax.swing.JOptionPane;

/**
 *
 * @author damonng
 */
public class BookingSummary extends javax.swing.JPanel {
    private static String customerID;
    private static Double total,roomPrice;
    private static int daysDiff,floorNum;
    mainPage parentFrame;
    NewCustomer NewCus;
    SearchCustomer Cus;
    /**
     * Creates new form BookingSummary
     * @param parentFrame
     */
    //integrate with all related panels
    public BookingSummary(mainPage parentFrame) {
        this.parentFrame = parentFrame;

        
        initComponents();
        endDateChooser.addPropertyChangeListener("date", evt -> {
        if (endDateChooser.getDate() != null && startDateChooser.getDate() != null) {
            calcTotal();
            txtTotal.setText(total.toString());
        }
    });
    }

    //to allow component adding
    public BookingSummary() {
        initComponents();
    }
    public static void setRoomID(Object data){
        txtRoomID.setText(data.toString());
    }
    public static void setRoomType(Object data){
        txtRoomType.setText(data.toString());
    }
    public static void setFloorNum(Object data){
        txtRoomFloor.setText(data.toString());
    }

    public static void setCustomerName(Object data){
        txtName.setText(data.toString());
    }
    public static void setCustomerID(Object data){
        customerID = data.toString();
    }
    public static void setStartDate(Date data){
        startDateChooser.setDate( data);
    }
    public static void setEndDate(Date data){
        endDateChooser.setDate( data);
    }
    public static void setRoomPrice(Object data){
        roomPrice =  Double.valueOf(data.toString());
    }
    public String getRoomId(){
        return txtRoomID.getText();
    }
    public String getFloorNum(){
        return txtRoomFloor.getText();
    }
    public String getRoomType(){
        return txtRoomType.getText();
    }
    public String getCustomerName(){
        return txtName.getText();
    }
    
    public String getCustomerID(){
        return customerID;
    }
    public String getStartDate(){
        if(startDateChooser.getDate()==null){
            return "";
        }else{
            return startDateChooser.getDate().toString();
        }
    }
    public String getEndDate(){
        if(startDateChooser.getDate()==null){
            return "";
        }else{
            return endDateChooser.getDate().toString();
        }
    }
    public String getRoomPrice(){
        return roomPrice.toString();
    }
    public String getDaysDiff(){
        return Integer.toString(daysDiff);
    }
    public String getTotal(){
        return txtTotal.getText();
    }
    private void calcTotal(){
        // Set the dates in the JDateChooser components
        Date startDate = startDateChooser.getDate();
        Date endDate = endDateChooser.getDate();

        // Calculate the time difference between the start and end dates in milliseconds
        long timeDiff = endDate.getTime() - startDate.getTime();

        // Convert the time difference to days
        daysDiff = (int) TimeUnit.DAYS.convert(timeDiff, TimeUnit.MILLISECONDS);
        System.out.println("Days: "+daysDiff);
        double pretax = (daysDiff*(roomPrice+Booking.TOURISMTAX));
        System.out.println("Pretax "+pretax);
        double postTax=pretax*Booking.SERVICETAX;
        System.out.println("Post Tax: "+postTax);
        DecimalFormat df = new DecimalFormat("#.##"); // round off to 2 decimal places
        total = Double.parseDouble(df.format(postTax));

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        errName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        email = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        username = new javax.swing.JPanel();
        lblRoomID = new javax.swing.JLabel();
        txtRoomID = new javax.swing.JTextField();
        errUName = new javax.swing.JLabel();
        pageTitle = new javax.swing.JLabel();
        divider = new javax.swing.JSeparator();
        RoomType = new javax.swing.JPanel();
        lblType = new javax.swing.JLabel();
        txtRoomType = new javax.swing.JTextField();
        btnRegister = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        errDateStart = new javax.swing.JLabel();
        lblDateStart = new javax.swing.JLabel();
        startDateChooser = new com.toedter.calendar.JDateChooser();
        endDateChooser = new com.toedter.calendar.JDateChooser();
        lblDateEnd = new javax.swing.JLabel();
        errDateEnd = new javax.swing.JLabel();
        lblRoomFloor = new javax.swing.JLabel();
        txtRoomFloor = new javax.swing.JTextField();

        lblName.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        lblName.setText("Customer Name:");

        errName.setForeground(new java.awt.Color(255, 102, 51));

        txtName.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        txtName.setForeground(new java.awt.Color(204, 204, 204));
        txtName.setText("Your name");
        txtName.setEnabled(false);
        txtName.setMinimumSize(new java.awt.Dimension(64, 26));
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nameLayout = new javax.swing.GroupLayout(name);
        name.setLayout(nameLayout);
        nameLayout.setHorizontalGroup(
            nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, nameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(errName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap())
        );
        nameLayout.setVerticalGroup(
            nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nameLayout.createSequentialGroup()
                .addGroup(nameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(nameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblName))
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        lblTotal.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        lblTotal.setText("Total:");

        txtTotal.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(204, 204, 204));
        txtTotal.setEnabled(false);
        txtTotal.setMinimumSize(new java.awt.Dimension(64, 26));
        txtTotal.setPreferredSize(new java.awt.Dimension(64, 26));
        txtTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTotalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalFocusLost(evt);
            }
        });
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout emailLayout = new javax.swing.GroupLayout(email);
        email.setLayout(emailLayout);
        emailLayout.setHorizontalGroup(
            emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        emailLayout.setVerticalGroup(
            emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emailLayout.createSequentialGroup()
                .addGroup(emailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(emailLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTotal))
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        lblRoomID.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        lblRoomID.setText("Room number:");

        txtRoomID.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        txtRoomID.setForeground(new java.awt.Color(204, 204, 204));
        txtRoomID.setText("Room number");
        txtRoomID.setEnabled(false);
        txtRoomID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRoomIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRoomIDFocusLost(evt);
            }
        });
        txtRoomID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomIDActionPerformed(evt);
            }
        });

        errUName.setForeground(new java.awt.Color(255, 102, 51));

        javax.swing.GroupLayout usernameLayout = new javax.swing.GroupLayout(username);
        username.setLayout(usernameLayout);
        usernameLayout.setHorizontalGroup(
            usernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usernameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRoomID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(usernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(errUName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRoomID, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                .addContainerGap())
        );
        usernameLayout.setVerticalGroup(
            usernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usernameLayout.createSequentialGroup()
                .addGroup(usernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(usernameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblRoomID))
                    .addComponent(txtRoomID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(errUName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pageTitle.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        pageTitle.setText("Confirm Booking");
        pageTitle.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        lblType.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        lblType.setText("Type:");

        txtRoomType.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        txtRoomType.setForeground(new java.awt.Color(204, 204, 204));
        txtRoomType.setEnabled(false);
        txtRoomType.setMinimumSize(new java.awt.Dimension(64, 26));
        txtRoomType.setPreferredSize(new java.awt.Dimension(64, 26));
        txtRoomType.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRoomTypeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRoomTypeFocusLost(evt);
            }
        });
        txtRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RoomTypeLayout = new javax.swing.GroupLayout(RoomType);
        RoomType.setLayout(RoomTypeLayout);
        RoomTypeLayout.setHorizontalGroup(
            RoomTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RoomTypeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(txtRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        RoomTypeLayout.setVerticalGroup(
            RoomTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RoomTypeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(RoomTypeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(txtRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        btnRegister.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        btnRegister.setText("Confirm");
        btnRegister.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegister.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBack.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        errDateStart.setForeground(new java.awt.Color(255, 102, 51));

        lblDateStart.setText("Start Date");

        startDateChooser.setDateFormatString("d/MMM/y");
        startDateChooser.setEnabled(false);
        startDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                startDateChooserFocusLost(evt);
            }
        });

        endDateChooser.setDateFormatString("d/MMM/y");
        endDateChooser.setEnabled(false);
        endDateChooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                endDateChooserFocusLost(evt);
            }
        });

        lblDateEnd.setText("End Date");

        errDateEnd.setForeground(new java.awt.Color(255, 102, 51));

        lblRoomFloor.setText("Floor");

        txtRoomFloor.setEnabled(false);
        txtRoomFloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomFloorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(divider, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(username, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RoomType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(name, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegister))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblDateStart)
                                            .addComponent(lblDateEnd))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(errDateEnd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(endDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                            .addComponent(errDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(startDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblRoomFloor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRoomFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pageTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(divider, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRoomFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRoomFloor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RoomType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(errDateStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(endDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(errDateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister)
                    .addComponent(btnBack))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained
        // TODO add your handling code here:
        if (txtName.getText().equals("Enter name")){
            txtName.setText("");
            txtName.setForeground(new Color (69,69,69));
        }
    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
        if (txtName.getText().equals("")){
            txtName.setText("Enter name");
            txtName.setForeground(new Color (204,204,204));
        }
    }//GEN-LAST:event_txtNameFocusLost

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtTotalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusGained
        // TODO add your handling code here:
        if (txtTotal.getText().equals("")){
            txtTotal.setText("");
            txtTotal.setForeground(new Color (69,69,69));
        }
    }//GEN-LAST:event_txtTotalFocusGained

    private void txtTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusLost
        // TODO add your handling code here:
        if (txtTotal.getText().equals("")){
            txtTotal.setText("");
            txtTotal.setForeground(new Color (204,204,204));
        }
    }//GEN-LAST:event_txtTotalFocusLost

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtRoomIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRoomIDFocusGained
        // TODO add your handling code here:
        if (txtRoomID.getText().equals("Room number")){
            txtRoomID.setText("");
            txtRoomID.setForeground(new Color (69,69,69));
        }
    }//GEN-LAST:event_txtRoomIDFocusGained

    private void txtRoomIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRoomIDFocusLost
        // TODO add your handling code here:
        if (txtRoomID.getText().equals("")){
            txtRoomID.setText("Room number");
            txtRoomID.setForeground(new Color (204,204,204));
        }
    }//GEN-LAST:event_txtRoomIDFocusLost

    private void txtRoomIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomIDActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed

        //declare variables
        String RoomID;
        LocalDate start = null,end = null;
        //assign values
        if ((startDateChooser.getDate()!=null)&&(endDateChooser.getDate()!=null)){
            start=LocalDate.parse(verify.dateformat.format(startDateChooser.getDate()),verify.formatter);
            end = LocalDate.parse(verify.dateformat.format(endDateChooser.getDate()),verify.formatter);
        }else{
            errDateStart.setText("no date detected for either date fields");
            errDateEnd.setText("no date detected for either date fields");
        }
        RoomID=txtRoomID.getText();
        if((!errDateStart.getText().equals("")) && (!errDateEnd.getText().equals(""))){
            JOptionPane.showMessageDialog(null,"Select one of the available rooms please","Success",JOptionPane.ERROR_MESSAGE);
            parentFrame.changePanel("availableRoomsPanel");
        }else{
            Booking record = new Booking(customerID,start,end,RoomID,total);
            String res=record.reserve();
            if("Success".equals(res)){
                JOptionPane.showMessageDialog(null,"Booking Saved.","Success",JOptionPane.INFORMATION_MESSAGE);
                GenerateReceipt infoDest = new GenerateReceipt(this);
                infoDest.setVisible(true);
                txtRoomID.setText(null);
                txtRoomFloor.setText(null);
                txtRoomType.setText(null);
                txtName.setText(null);
                startDateChooser.setDate(null);
                endDateChooser.setDate(null);
                txtTotal.setText(null);
            }else{
                JOptionPane.showMessageDialog(null, "Could not write into file due to "+res,"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        parentFrame.changePanel("availableRoomsPanel");
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtRoomTypeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRoomTypeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomTypeFocusGained

    private void txtRoomTypeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRoomTypeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomTypeFocusLost

    private void txtRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomTypeActionPerformed

    private void startDateChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_startDateChooserFocusLost

    }//GEN-LAST:event_startDateChooserFocusLost

    private void endDateChooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_endDateChooserFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_endDateChooserFocusLost

    private void txtRoomFloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomFloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomFloorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel RoomType;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JSeparator divider;
    private javax.swing.JPanel email;
    private static com.toedter.calendar.JDateChooser endDateChooser;
    private javax.swing.JLabel errDateEnd;
    private javax.swing.JLabel errDateStart;
    private javax.swing.JLabel errName;
    private javax.swing.JLabel errUName;
    private javax.swing.JLabel lblDateEnd;
    private javax.swing.JLabel lblDateStart;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRoomFloor;
    private javax.swing.JLabel lblRoomID;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblType;
    private javax.swing.JPanel name;
    private javax.swing.JLabel pageTitle;
    private static com.toedter.calendar.JDateChooser startDateChooser;
    private static javax.swing.JTextField txtName;
    private static javax.swing.JTextField txtRoomFloor;
    private static javax.swing.JTextField txtRoomID;
    private static javax.swing.JTextField txtRoomType;
    private static javax.swing.JTextField txtTotal;
    private javax.swing.JPanel username;
    // End of variables declaration//GEN-END:variables
}
